Keyboard Macro Player 1.1
Created 11 November 2000 by James Vincent Carnicelli

--------------------------------------------------------------------------------
Table of Contents

- Introduction
- Macro Language
- Keyboard Symbols
- Tips and Tricks


--------------------------------------------------------------------------------
Introduction

The purpose of this utility is to execute keyboard events.  If you have a 
program you regularly have to type the same things in over and over (or actions 
you perform with a mouse that can also be performed with the keyboard), this 
can automate that repetition.

This program does not record keyboard events.  Instead, it gives you the chance 
to create a keyboard script.  Here's an example that could be used with 
Notepad:

----------------------------------------
# First, we'll enter a message
Hi there.{ENTER}
Sleep 100 ms
My name is John Doe{ENTER}
Sleep 2 s

# Now let's save the sucker
%f
Sleep 100ms
a
Keyboard Macro Test.txt
{ENTER}
----------------------------------------

See the Macro Language section below for specifics on the macro language.


--------------------------------------------------------------------------------
Macro Language

The language you use is simple.  Each line represents a command to execute.
Most lines will be literal characters you want to send.  The rest will be one 
of the following:

- Blank line to help organize stuff
- Helpful comment (line begins with '#')
- Pause to wait for user to hit "Continue" button (specified as 'Pause')
- Beginning of a block of lines to ignore (specified as 'Start Ignore')
- End of a block of lines to ignore (specified as 'End Ignore')
- Have program sleep for some amount of time to give recieving program
   a chance to catch up (specified as 'Sleep 1234 ms', 'Sleep 12 s', or
   'Sleep 12'; unit is seconds by default)

The Sleep command is very important.  If you don't stick these statements in 
here and there, depending on how quickly your recieving program keeps up, you 
may find some key events are lost on the receiving program.


--------------------------------------------------------------------------------
Keyboard Symbols

Place any combination of the following before a key to have it pressed in
conjunction with any of the other keys:

Key    Code
------ ----
SHIFT  +
CTRL   ^
ALT    %

Most keys are represented by their literal character equivalents (e.g., "A" is 
represented by "A").  For those keys that have no obvious textual 
representation, try using the following symbols:

Key            Code
------------- -----------------------------
BACKSPACE     {BACKSPACE}, {BS}, or {BKSP}
BREAK         {BREAK}
CAPS LOCK     {CAPSLOCK}
DEL or DELETE {DELETE} or {DEL}
DOWN ARROW    {DOWN}
END           {END}
ENTER         {ENTER} or ~
ESC           {ESC}
HELP          {HELP}
HOME          {HOME}
INS or INSERT {INSERT} or {INS}
LEFT ARROW    {LEFT}
NUM LOCK      {NUMLOCK}
PAGE DOWN     {PGDN}
PAGE UP       {PGUP}
PRINT SCREEN  {PRTSC}
RIGHT ARROW   {RIGHT}
SCROLL LOCK   {SCROLLLOCK}
TAB           {TAB}
UP ARROW      {UP}
F1            {F1}
F2            {F2}
F3            {F3}
F4            {F4}
F5            {F5}
F6            {F6}
F7            {F7}
F8            {F8}
F9            {F9}
F10           {F10}
F11           {F11}
F12           {F12}
F13           {F13}
F14           {F14}
F15           {F15}
F16           {F16}


--------------------------------------------------------------------------------
Tips and Tricks

You can stop the execution of the current macro by clicking on the "Stop" 
button (which is labelled "Execute" when the macro is not running).  To be sure 
you can stop it, then, you need to make sure that "Execute" button is always 
visible while the script is executing.

To help you find keyboard symbols, select the "Edit | Insert Symbol" menu 
item.  You can also use this to insert prefab commands.

Note that when you hit "Execute", the first thing this program does is send 
ALT-TAB to switch to the next program.  (I assume you don't want to run your 
macro on this utility, after all.)  So be sure your target program is next in 
line.  If you're not sure, bring your target program to the foreground and 
then this one before you hit "Execute".

Here's a cute trick.  If you want your program to loop indefinitely, try 
inserting the following at the end of your script:

----------------------------------------
# Loop back to the beginning
%{TAB}
Sleep 5
%fr
----------------------------------------

This utility's window will return to the forefront, pause for five seconds, and
then execute the "File | Stop and Reexecute" menu item.
